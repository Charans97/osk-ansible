---
# ---------------- Java Section ----------------
- name: Ensure Java install directory exists
  file:
    path: "{{ install_dir }}/java"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Extract Java tarball
  unarchive:
    src: "{{ java_package }}"
    dest: "{{ install_dir }}/java"
    remote_src: no

- name: Detect JDK directory
  find:
    paths: "{{ install_dir }}/java"
    file_type: directory
    patterns: "jdk-*"
  register: jdk_dir

- name: Set JAVA_HOME fact
  set_fact:
    java_home: "{{ jdk_dir.files[0].path }}"

- name: Write JAVA_HOME and PATH to profile
  copy:
    dest: /etc/profile.d/java.sh
    mode: 0755
    content: |
      export JAVA_HOME={{ java_home }}
      export PATH=$JAVA_HOME/bin:$PATH

# ---------------- Kafka Section ----------------
- name: Create Kafka install dir
  file:
    path: "{{ install_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Extract Kafka tarball
  unarchive:
    src: "{{ kafka_tarball }}"
    dest: "{{ install_dir }}"
    remote_src: no
    extra_opts: [--strip-components=1]

# ---------------- SSL Section ----------------
- name: Copy CA files
  copy:
    src: "{{ item }}"
    dest: "{{ install_dir }}/config/"
    mode: 0600
  with_items:
    - ca.crt
    - ca.key
  when: ssl.enabled | default(false)

- name: Cleanup old keystore/truststore
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ install_dir }}/config/kafka.keystore.jks"
    - "{{ install_dir }}/config/kafka.truststore.jks"
    - "{{ install_dir }}/config/kafka.csr"
    - "{{ install_dir }}/config/cert-signed"
    - "{{ install_dir }}/config/cert-file"
  when: ssl.enabled | default(false)

- name: Deploy SSL generation script
  template:
    src: ssl-generate.sh.j2
    dest: "{{ install_dir }}/config/ssl-generate.sh"
    mode: 0755
  when: ssl.enabled | default(false)

- name: Generate SSL keystore/truststore
  command: "{{ install_dir }}/config/ssl-generate.sh"
  environment:
    JAVA_HOME: "{{ java_home }}"
    PATH: "{{ java_home }}/bin:{{ ansible_env.PATH }}"
  args:
    chdir: "{{ install_dir }}/config"
  when: ssl.enabled | default(false)


# ---------------- Kafka Connect Configuration ----------------
- name: Configure Kafka Connect distributed.properties
  template:
    src: connect-distributed.properties.j2
    dest: "{{ install_dir }}/config/connect-distributed.properties"
    mode: 0644
  notify: restart kafka-connect

# ---------------- Kafka User & Permissions ----------------
- name: Ensure kafka group exists
  group:
    name: kafka
    state: present

- name: Ensure kafka user exists
  user:
    name: kafka
    group: kafka
    shell: /bin/false
    create_home: yes
    system: yes
    state: present

- name: Change ownership of Kafka directories
  file:
    path: "{{ item }}"
    owner: kafka
    group: kafka
    recurse: yes
  loop:
    - /opt/kafka
    - /var/lib/kafka
    - /var/log/kafka



# ---------------- Debezium Oracle Plugin ----------------
- name: Ensure plugins directory exists
  file:
    path: "{{ install_dir }}/plugins"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy Debezium Oracle connector tarball
  copy:
    src: debezium-connector-oracle-2.7.3.Final-plugin.tar.gz
    dest: /tmp/debezium-oracle.tar.gz
    mode: 0644

- name: Extract Debezium Oracle connector
  unarchive:
    src: /tmp/debezium-oracle.tar.gz
    dest: "{{ install_dir }}/plugins"
    remote_src: yes


# ---------------- Kafka Connect systemd Service ----------------
- name: Configure Kafka Connect systemd service
  template:
    src: kafka-connect.service.j2
    dest: /etc/systemd/system/kafka-connect.service
    mode: 0644

- name: Reload systemd
  command: systemctl daemon-reload
  become: yes

- name: Enable and start Kafka Connect
  systemd:
    name: kafka-connect
    state: started
    enabled: yes
